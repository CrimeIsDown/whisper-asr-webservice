name: Publish Docker Image
on:
  push:
    tags:
      - '*'
    branches:
      - debug

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: crimeisdown/whisper-asr-webservice
  # Normally ${{ github.repository }} should be used but it doesn't convert to lowercase which is required for the image name
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - docker_file: Dockerfile
            platforms: linux/arm64,linux/amd64
          - docker_file: Dockerfile.gpu
            tag_extension: -gpu
            platforms: linux/amd64
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and Publish the Docker debug image
      if: github.ref == 'refs/heads/debug'
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ${{ matrix.docker_file }}
        push: true
        tags: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:debug${{ matrix.tag_extension }}"
        platforms: ${{ matrix.platforms }}
        cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:debug${{ matrix.tag_extension }}
        cache-to: type=inline
    - name: Build and Publish the Docker image
      if: github.ref != 'refs/heads/debug'
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ${{ matrix.docker_file }}
        push: true
        tags: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest${{ matrix.tag_extension }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}${{ matrix.tag_extension }}"
        platforms: ${{ matrix.platforms }}
        cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest${{ matrix.tag_extension }}
        cache-to: type=inline
